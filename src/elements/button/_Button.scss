@import '../../styles/lib';

$base-class: button;
$style: default;

:export {
  baseClass: $base-class;
}

.#{$base-class} {
  $this: &;
  position: relative;
  @include button-icon;
  @include button-size(medium);
  @include loading-spinner-internal {
    background-color: map-get($colors, eden);
  }

  &--default {
    @include button-style;
  }

  &__content-wrapper {
    align-items: center;
    display: flex;
    justify-content: center;
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
    width: 100%;
  }


  &__loader-wrapper-with-children {
    opacity: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;

    transform: translate(-50%, -50%) scale(0.8) !important;
    transition: 0.2s ease-in-out;
    transition-property: opacity, transform;

    display: flex;
    align-items: center;
    justify-content: center;
  }

  &__loader-wrapper-without-children {
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    display: flex;
    align-items: center;
    justify-content: center;

    @include transform(scale(0));
    transition: 0.2s ease-in-out;
    transition-property: opacity, transform;
  }

  &--transparent {
    @include transparent-button;
  }

  &--border {
    border: solid 1px map-get($colors, chimera);
    box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;
  }

  &--size-large {
    @include button-size(large);
  }

  &--size-small {
    @include button-size(small);
    @include owl {
      margin-left: 8px;
    }
  }

  &--include-focus {
    @include focus;
  }

  &--loading {
    #{$this}__loader-wrapper-with-children {
      opacity: 1;
      @include transform(scale(1));
    }
    #{$this}__loader-wrapper-without-children {
      opacity: 1;
      @include transform(scale(1));
    }

    #{$this}__content-wrapper {
      opacity: 0;
      @include transform(scale(0));
    }
  }

  &--right-icon {
    @include button-icon($right: true);

    #{$this}__content-wrapper {
      flex-direction: row-reverse;
    }
  }

  &--game {
    @include button-style($style: game);
  }

  &--glossy {
    @include button-style($style: glossy);
  }

  &--abstract {
    @include button-style($style: abstract);
  }

  &--minimal {
    @include button-style($style: minimal);
  }

  &--skew {
    @include button-style($style: skew);
  }

  &--minesweeper {
    @include button-style($style: minesweeper);
  }

  &--minesweeper--active {
    @include button-style($style: minesweeper, $is-active: true);
  }

  &--blur {
    @include button-style($style: blur);
  }

  &--empty {
    @include button-icon($empty: true);

    min-width: 0;
  }

  &--rounded {
    @include button-is-round;
  }

  &--hand-writing {
    @include type-style-cali;
  }

  @each $intent, $color in $intent-colors {
    &--intent-#{$intent} {
      @include button-intent($intent);
    }
  }

  .visually-hidden {
    @include visually-hidden;
  }

  &__icon {
    margin-left: -2px !important;
    margin-right: 5px !important;
  }
}
