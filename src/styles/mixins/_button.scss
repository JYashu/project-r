@mixin button-style($style: default, $is-active: false) {
  $border-radius: 4px;
  $min-width: 80px;

  @if $style == default {
    @include border-radius($border-radius);

    appearance: none;
    border: 0;
    cursor: pointer;
    display: inline-flex;
    position: relative;
    text-decoration: none;
    transition: 0.1s ease-in-out;
    transition-property: color, background-color;
    box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;

    &:active {
      box-shadow: rgb(204, 219, 232) 3px 3px 6px 0px inset,
        rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset;
    }

    &[disabled] {
      cursor: not-allowed;
    }
  }

  @if $style == skew {
    /*
    * by Wilmington and Beaches
    */
    background-color: map-get($colors, victim);
    border: 1px solid map-get($colors, header-bg);
    box-sizing: border-box;
    color: map-get($colors, header-bg);
    font-family: 'Avenir Next LT W01 Bold', sans-serif;
    font-weight: 700;
    line-height: 24px;
    position: relative;
    text-decoration: none;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    z-index: 2;

    &:hover,
    &:active {
      outline: 0;
    }

    &:hover {
      background-color: map-get($colors, victim);
      cursor: pointer;
    }

    &:before {
      background-color: map-get($colors, lavender) !important;
      content: '';
      height: calc(100% + 3px);
      position: absolute;
      right: -7px;
      top: -9px;
      transition: all 160ms ease-in;
      width: 100%;
      z-index: -1;
    }

    &:hover:before {
      background-color: map-get($colors, header-text) !important;
      height: 100%;
      right: 0;
      top: 0;
    }

    &[disabled] {
      color: map-get($colors, juror-2);
      cursor: not-allowed;

      &:before {
        background-color: map-get($colors, prosecutor) !important;
        opacity: 0.16;
        height: 100% !important;
        right: 0 !important;
        top: 0 !important;
      }
      &:hover:before {
        background-color: map-get($colors, prosecutor) !important;
        opacity: 0.16;
        height: 100% !important;
        right: 0 !important;
        top: 0 !important;
      }
    }
  }

  @if $style == minimal {
    height: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #13aa52;
    border-radius: $border-radius;
    border-top: 2px solid #dd8181;
    border-left: 2px solid #dd8181;
    border-bottom: 2px solid #7d3131;
    border-right: 2px solid #7d3131;
    box-shadow: rgba(0, 0, 0, 0.1) 0 2px 4px 0;
    box-sizing: border-box;
    color: #fff;
    cursor: pointer;
    outline: none;
    outline: 0;
    text-align: center;
    transform: translateY(0);
    transition: transform 150ms, box-shadow 150ms;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;

    &:hover {
      box-shadow: rgba(0, 0, 0, 0.15) 0 3px 9px 0;
      transform: translateY(-2px);
    }

    &:active {
      transform: translateY(2px);
    }
  }

  @if $style == game {
    /*
    * by Algolia
    */
    @include type-style-mono;
    @include border-radius($border-radius);

    color: #36395a;
    align-items: center;
    appearance: none;
    background-color: #fcfcfd;
    min-width: $min-width;
    border-width: 0;
    box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px,
      #d6d6e7 0 -3px 0 inset;
    box-sizing: border-box;
    cursor: pointer;
    display: inline-flex;
    justify-content: center;
    list-style: none;
    overflow: hidden;
    padding-top: 5px;
    padding-bottom: 5px;
    margin: 4px;
    position: relative;
    text-align: left;
    text-decoration: none;
    transition: box-shadow 0.15s, transform 0.15s;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    white-space: nowrap;
    will-change: box-shadow, transform;

    &:focus {
      box-shadow: #d6d6e7 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,
        rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #d6d6e7 0 -3px 0 inset;
    }

    &:hover {
      box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px,
        #d6d6e7 0 -3px 0 inset;
      @include transform(translateY(-2px));
    }

    &:active {
      box-shadow: #d6d6e7 0 3px 7px inset;
      @include transform(translateY(2px));
    }
  }

  @if $style == glossy {
    @include border-radius($border-radius);

    background: transparent;
    color: map-get($colors, header-bg);
    // color: #3bd9d9;
    min-width: $min-width;
    text-transform: uppercase;
    border: 2px solid map-get($colors, header-bg);
    @include transform(translate(0));
    overflow: hidden;
    cursor: pointer;

    &::before {
      content: '';
      position: absolute;
      background: map-get($colors, header-bg);
      width: 8px;
      top: 0;
      bottom: 0;
      left: -32px;
      @include transform(rotate(-16deg));
      filter: blur(18px);
    }

    &:active {
      background-color: rgba(
        red(map-get($colors, header-text)),
        green(map-get($colors, header-text)),
        blue(map-get($colors, header-text)),
        0.7
      );
      color: map-get($colors, header-bg);
    }

    &:hover::before {
      left: calc(100% + 32px);
      transition: 0.75s;
    }
  }

  @if $style == abstract {
    & {
      @include border-radius($border-radius);

      color: #ffa500;
      position: relative;
      background: transparent;
      min-width: $min-width;
      border: 2px solid #ffa500;
      cursor: pointer;
      transition: all 0.7s;
      overflow: hidden;
    }

    &:hover {
      color: #1a1a1a;
    }

    & span {
      transition: all 0.7s;
      z-index: -1;
    }

    & .left {
      content: '';
      position: absolute;
      right: 100%;
      top: 0;
      width: 25%;
      height: 100%;
      background: blue;
    }

    &:hover .left {
      top: 0;
      right: 0;
    }

    & .top {
      content: '';
      position: absolute;
      left: 25%;
      top: -100%;
      width: 25%;
      height: 100%;
      background: red;
    }

    &:hover .top {
      top: 0;
      left: 50%;
    }

    & .bottom {
      content: '';
      position: absolute;
      left: 50%;
      top: 100%;
      width: 25%;
      height: 100%;
      background: yellow;
    }

    &:hover .bottom {
      top: 0;
      left: 25%;
    }

    & .right {
      content: '';
      position: absolute;
      left: 100%;
      top: 0;
      width: 25%;
      height: 100%;
      background: pink;
    }

    &:hover .right {
      top: 0;
      left: 0;
    }
  }

  @if $style == blur {
    & {
      $min-width: 80px;
      height: 35px;
      display: flex;
      align-items: center;
      margin: 1.5em;
      cursor: pointer;
      padding: 1em;
      background: rgb(43, 43, 43);
      position: relative;
      color: white;
      border-radius: 5px;
    }
    &::before,
    &::after {
      content: '';
      position: absolute;
      z-index: -1;
      border-radius: 5px;
      width: 105%;
      transition: all 0.4s;
    }
    &::before {
      left: 0%;
      height: 130%;
      background: linear-gradient(to right, #021b79, #0575e6);
    }
    &::after {
      left: -10%;
      height: 120%;
      background: #ffffff56;
      backdrop-filter: blur(10px);
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.164);
    }
    &:hover::before {
      transform: translateX(-2.5%);
    }
    &:hover::after {
      transform: translateX(15%);
    }
  }

  @if $style == minesweeper {
    & {
      display: flex;
      align-items: center;
      justify-content: center;
      border-bottom: solid 2px map-get($colors, mine-sweeper);
      border-right: solid 2px map-get($colors, mine-sweeper);
      border-top: solid 2px #fff;
      border-left: solid 2px #fff;
      background-color: map-get($colors, mine-sweeper-bg);
      color: black;

      @if $is-active {
        border-bottom: solid 0.5px white;
        border-right: solid 0.5px white;
        border-left: solid 2px map-get($colors, mine-sweeper);
        border-top: solid 2px map-get($colors, mine-sweeper);
      }
    }

    &:active,
    &--active {
      border-bottom: solid 0.5px white;
      border-right: solid 0.5px white;
      border-left: solid 2px map-get($colors, mine-sweeper);
      border-top: solid 2px map-get($colors, mine-sweeper);
      background-color: map-get($colors, mine-sweeper-bg);
      color: black;
    }
  }
}

@mixin transparent-button {
  background-color: transparent;
  color: map-get($colors, eden);
  box-shadow: none;

  &:active {
    box-shadow: none;
  }

  &[disabled] {
    background-color: transparent;
    color: map-get($colors, juror-3);

    &:hover {
      background-color: map-get($colors, juror-4);
      color: map-get($colors, juror-3);
    }
  }
}

@mixin button-size($size: medium) {
  @if $size == small {
    @include type-style-city;

    padding: 6px 16px;
  }

  @if $size == medium {
    @include type-style-city;

    padding: 8px 16px;
  }

  @if $size == large {
    @include type-style-district;

    padding: 12px 16px;
  }
}

@mixin button-icon($empty: false, $right: false) {
  .icon {
    margin: auto;

    @if $right {
      margin: -2px -8px -2px 4px;
    }

    @if $empty {
      margin: -2px -10px;
    }
  }
}

@mixin button-intent($intent) {
  $color: map-get($intent-colors, $intent);

  background-color: $color;
  color: map-get($colors, victim);

  @include loading-spinner-internal {
    background-color: map-get($colors, victim);
  }

  &:hover,
  :focus,
  :active {
    background-color: darken($color, 5%);
    color: map-get($colors, victim);
  }

  @if $intent == 'primary' {
    &:hover,
    &:focus {
      background-color: map-get($colors, lawyer-light);
    }

    &:active {
      background-color: map-get($colors, lawyer-dark);
    }
  }
}

@mixin loading-spinner-internal {
  .loading-spinner {
    /* stylelint-disable-next-line selector-max-compound-selectors */
    > div > div {
      @content;
    }
  }
}

@mixin button-is-round {
  @include border-radius(25px);
}
